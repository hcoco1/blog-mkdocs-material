{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Latest Blog Posts","text":""},{"location":"2024/07/23/agile-methodology/","title":"Agile Methodology","text":"<p>Agile methodology is a project management and software development approach that emphasizes flexibility, collaboration, and customer satisfaction. It promotes iterative development, where requirements and solutions evolve through the collaborative effort of cross-functional teams. Agile methodology is designed to address the challenges of changing requirements and to deliver high-quality products more efficiently.</p>"},{"location":"2024/07/23/agile-methodology/#key-principles-of-agile-methodology","title":"Key Principles of Agile Methodology","text":"<p>The Agile methodology is based on the following key principles, as outlined in the Agile Manifesto:</p> <ol> <li>Individuals and Interactions over processes and tools.</li> <li>Working Software over comprehensive documentation.</li> <li>Customer Collaboration over contract negotiation.</li> <li>Responding to Change over following a plan.</li> </ol>"},{"location":"2024/07/23/agile-methodology/#core-values","title":"Core Values","text":""},{"location":"2024/07/23/agile-methodology/#1-individuals-and-interactions","title":"1. Individuals and Interactions","text":"<ul> <li>Focus on effective communication and teamwork.</li> <li>Empower and trust team members to make decisions.</li> </ul>"},{"location":"2024/07/23/agile-methodology/#2-working-software","title":"2. Working Software","text":"<ul> <li>Prioritize delivering functional software frequently.</li> <li>Ensure the software meets the needs of the users and stakeholders.</li> </ul>"},{"location":"2024/07/23/agile-methodology/#3-customer-collaboration","title":"3. Customer Collaboration","text":"<ul> <li>Engage customers and stakeholders throughout the development process.</li> <li>Use feedback to shape and refine the product.</li> </ul>"},{"location":"2024/07/23/agile-methodology/#4-responding-to-change","title":"4. Responding to Change","text":"<ul> <li>Embrace changes in requirements, even late in development.</li> <li>Adapt and re-prioritize work to maximize value.</li> </ul>"},{"location":"2024/07/23/agile-methodology/#key-components","title":"Key Components","text":""},{"location":"2024/07/23/agile-methodology/#1-iterative-development","title":"1. Iterative Development","text":"<ul> <li>Projects are divided into small, manageable units called iterations or sprints.</li> <li>Each iteration typically lasts 1-4 weeks and results in a potentially shippable product increment.</li> </ul>"},{"location":"2024/07/23/agile-methodology/#2-continuous-feedback","title":"2. Continuous Feedback","text":"<ul> <li>Regular feedback loops with customers and stakeholders.</li> <li>Use feedback to make continuous improvements.</li> </ul>"},{"location":"2024/07/23/agile-methodology/#3-cross-functional-teams","title":"3. Cross-Functional Teams","text":"<ul> <li>Teams composed of members with different skill sets.</li> <li>Collaboration and self-organization are emphasized.</li> </ul>"},{"location":"2024/07/23/agile-methodology/#4-incremental-delivery","title":"4. Incremental Delivery","text":"<ul> <li>Deliver the product in small, functional increments.</li> <li>Focus on delivering the most valuable features first.</li> </ul>"},{"location":"2024/07/23/agile-methodology/#5-daily-stand-ups","title":"5. Daily Stand-Ups","text":"<ul> <li>Short, daily meetings to discuss progress, plans, and impediments.</li> <li>Keeps the team aligned and focused.</li> </ul>"},{"location":"2024/07/23/agile-methodology/#common-agile-frameworks","title":"Common Agile Frameworks","text":"<p>Several frameworks implement Agile principles, including:</p>"},{"location":"2024/07/23/agile-methodology/#1-scrum","title":"1. Scrum","text":"<ul> <li>Roles: Product Owner, Scrum Master, Development Team.</li> <li>Artifacts: Product Backlog, Sprint Backlog, Increment.</li> <li>Ceremonies: Sprint Planning, Daily Scrum, Sprint Review, Sprint Retrospective.</li> </ul>"},{"location":"2024/07/23/agile-methodology/#2-kanban","title":"2. Kanban","text":"<ul> <li>Focuses on visualizing work, limiting work in progress, and improving flow.</li> <li>Uses a Kanban board to manage tasks.</li> </ul>"},{"location":"2024/07/23/agile-methodology/#3-extreme-programming-xp","title":"3. Extreme Programming (XP)","text":"<ul> <li>Emphasizes technical practices such as Test-Driven Development (TDD), Pair Programming, and Continuous Integration.</li> </ul>"},{"location":"2024/07/23/agile-methodology/#4-lean","title":"4. Lean","text":"<ul> <li>Focuses on delivering value by eliminating waste and optimizing processes.</li> </ul>"},{"location":"2024/07/23/agile-methodology/#benefits-of-agile-methodology","title":"Benefits of Agile Methodology","text":"<ul> <li>Flexibility: Can quickly adapt to changes in requirements and market conditions.</li> <li>Customer Satisfaction: Frequent delivery of working software and active customer involvement.</li> <li>Quality: Emphasis on testing and continuous improvement.</li> <li>Transparency: Regular progress updates and visible workflows.</li> <li>Collaboration: Enhanced teamwork and communication.</li> </ul>"},{"location":"2024/07/23/agile-methodology/#conclusion","title":"Conclusion","text":"<p>Agile methodology provides a flexible and collaborative approach to software development and project management. By embracing change, prioritizing customer feedback, and delivering incremental value, Agile helps teams build high-quality products that meet user needs and adapt to evolving requirements.</p>"},{"location":"2024/07/23/agile-methodology/#videos","title":"Videos","text":""},{"location":"2023/11/15/developing-your-pitch/","title":"Developing Your Pitch","text":"<p>An elevator pitch is your short (30-60 second) professional introduction. A prepared elevator pitch will help you start a conversation with potential employers, faculty members, alumni and others. (Developing Your Elevator Pitch, n.d.)</p>"},{"location":"2023/11/15/developing-your-pitch/#why-you-need-an-elevator-pitch","title":"Why you need an elevator pitch","text":"<p>According to the U.S. Bureau of Labor Statistics, 70% of all jobs are found through networking. By building authentic relationships with professionals, over time you can uncover job opportunities that might not be posted, or possibly create an opportunity that did not previously exist.</p> <p>By engaging in networking activities, it allows you to raise awareness of \u201cyour personal brand\u201d by meeting other professionals and sharing your abilities, skills and background. In turn when people in your network hear about potential opportunities, they may immediately think of you.</p> <p>Your elevator pitch should:</p> <ol> <li> <p>Communicate your personal brand and what you want to be known for</p> </li> <li> <p>Convey your unique selling points</p> </li> <li> <p>Answer the questions \u201cTell me about yourself\u2019 \u201cWhat do you do?\u201d and \u201cWhat are you interested in doing next?</p> </li> </ol> <p>(Developing Your Elevator Pitch, n.d.).</p>"},{"location":"2023/11/15/developing-your-pitch/#before-you-create-your-pitch-first-think-about","title":"Before you create your pitch, first think about:","text":"<ul> <li>What makes you unique?</li> <li>What are you seeking?</li> <li>What can you offer?</li> <li>What do you want a person to remember about you?</li> </ul> <p>(Developing Your Elevator Pitch, n.d.).</p>"},{"location":"2023/11/15/developing-your-pitch/#create-your-pitch-in-five-steps","title":"Create your pitch in five steps","text":"<ol> <li>Spend some time thinking about and writing down your top work and school experiences using the STAR Method (Situation, Task, Action and Result). Choose one one-to-two experiences you want to pitch.</li> <li>Shorten each story to a sentence or two focusing on your actions and the results of those actions.</li> <li>Analyze the common themes:<ul> <li>What are you good at?</li> <li>What do you like doing?</li> <li>Are you a problem solver, analytical thinker, effective communicator, innovator, etc?</li> </ul> </li> <li>Tailoring your pitch for the audience/person you are speaking to and the setting you are in</li> <li>Put it together and make it conversational. Add a question to the end of your description or offer to help someone with something they are working on. </li> </ol> <p>(Developing Your Elevator Pitch, n.d.).</p>"},{"location":"2023/11/15/developing-your-pitch/#references","title":"References","text":"<ul> <li>Developing your elevator pitch. Center for Career Development. https://careerdevelopment.princeton.edu/guides/networking/developing-your-elevator-pitch.</li> </ul>"},{"location":"2024/07/22/devops-culture/","title":"Devops Culture","text":"<p>At its essence, a DevOps culture involves closer collaboration and a shared responsibility between development and operations for the products they create and maintain. This helps companies align their people, processes, and tools toward a more unified customer focus. </p> <p>DevOps is a set of practices, principles, and cultural philosophies that aim to bridge the gap between software development (Dev) and IT operations (Ops). The primary goal of DevOps is to shorten the software development life cycle and provide continuous delivery with high software quality. DevOps culture emphasizes collaboration, communication, and integration between these traditionally separate teams.</p>"},{"location":"2024/07/22/devops-culture/#key-principles-of-devops-culture","title":"Key Principles of DevOps Culture","text":""},{"location":"2024/07/22/devops-culture/#1-collaboration-and-communication","title":"1. Collaboration and Communication","text":"<ul> <li>Shared Goals: Development and operations teams work together towards common objectives.</li> <li>Open Communication: Promotes transparency and reduces silos between teams.</li> <li>Regular Meetings: Frequent meetings and discussions to align on progress and challenges.</li> </ul>"},{"location":"2024/07/22/devops-culture/#2-continuous-integration-and-continuous-delivery-cicd","title":"2. Continuous Integration and Continuous Delivery (CI/CD)","text":"<ul> <li>Continuous Integration (CI): Developers frequently merge their code changes into a central repository, followed by automated builds and tests.</li> <li>Continuous Delivery (CD): Ensures that code changes are automatically prepared for a release to production.</li> </ul>"},{"location":"2024/07/22/devops-culture/#3-automation","title":"3. Automation","text":"<ul> <li>Infrastructure as Code (IaC): Managing and provisioning computing infrastructure through machine-readable scripts.</li> <li>Automated Testing: Running automated tests to validate code quality and functionality.</li> <li>Deployment Automation: Automating the process of deploying code to production.</li> </ul>"},{"location":"2024/07/22/devops-culture/#4-monitoring-and-logging","title":"4. Monitoring and Logging","text":"<ul> <li>Continuous Monitoring: Tracking system performance and user experience in real-time.</li> <li>Centralized Logging: Collecting and analyzing logs from various sources to detect issues and optimize performance.</li> </ul>"},{"location":"2024/07/22/devops-culture/#5-feedback-loops","title":"5. Feedback Loops","text":"<ul> <li>User Feedback: Continuously gathering and incorporating feedback from end-users.</li> <li>Internal Feedback: Encouraging team members to provide feedback on processes and workflows for continuous improvement.</li> </ul>"},{"location":"2024/07/22/devops-culture/#6-security","title":"6. Security","text":"<ul> <li>DevSecOps: Integrating security practices within the DevOps process.</li> <li>Automated Security Testing: Embedding security checks and tests into the CI/CD pipeline.</li> </ul>"},{"location":"2024/07/22/devops-culture/#benefits-of-devops-culture","title":"Benefits of DevOps Culture","text":""},{"location":"2024/07/22/devops-culture/#1-improved-collaboration","title":"1. Improved Collaboration","text":"<ul> <li>Enhanced communication and cooperation between development and operations teams lead to more efficient workflows and problem-solving.</li> </ul>"},{"location":"2024/07/22/devops-culture/#2-faster-time-to-market","title":"2. Faster Time to Market","text":"<ul> <li>Continuous integration, continuous delivery, and automation reduce the time it takes to deliver new features and updates.</li> </ul>"},{"location":"2024/07/22/devops-culture/#3-increased-deployment-frequency","title":"3. Increased Deployment Frequency","text":"<ul> <li>Automation and streamlined processes enable more frequent and reliable deployments.</li> </ul>"},{"location":"2024/07/22/devops-culture/#4-higher-quality-and-reliability","title":"4. Higher Quality and Reliability","text":"<ul> <li>Automated testing and continuous monitoring improve software quality and system reliability.</li> </ul>"},{"location":"2024/07/22/devops-culture/#5-enhanced-security","title":"5. Enhanced Security","text":"<ul> <li>Integrating security practices early in the development process helps identify and mitigate vulnerabilities more effectively.</li> </ul>"},{"location":"2024/07/22/devops-culture/#6-greater-customer-satisfaction","title":"6. Greater Customer Satisfaction","text":"<ul> <li>Faster delivery of features and continuous improvement result in a better user experience and higher customer satisfaction.</li> </ul>"},{"location":"2024/07/22/devops-culture/#practices-and-tools","title":"Practices and Tools","text":""},{"location":"2024/07/22/devops-culture/#1-version-control-systems","title":"1. Version Control Systems","text":"<ul> <li>Tools like Git for source code management and collaboration.</li> </ul>"},{"location":"2024/07/22/devops-culture/#2-cicd-tools","title":"2. CI/CD Tools","text":"<ul> <li>Jenkins, Travis CI, GitLab CI, CircleCI for automating build, test, and deployment processes.</li> </ul>"},{"location":"2024/07/22/devops-culture/#3-configuration-management-tools","title":"3. Configuration Management Tools","text":"<ul> <li>Ansible, Chef, Puppet for managing and automating infrastructure configuration.</li> </ul>"},{"location":"2024/07/22/devops-culture/#4-containerization-and-orchestration","title":"4. Containerization and Orchestration","text":"<ul> <li>Docker for containerization and Kubernetes for container orchestration.</li> </ul>"},{"location":"2024/07/22/devops-culture/#5-monitoring-and-logging-tools","title":"5. Monitoring and Logging Tools","text":"<ul> <li>Prometheus, Grafana, ELK Stack (Elasticsearch, Logstash, Kibana) for monitoring and logging.</li> </ul>"},{"location":"2024/07/22/devops-culture/#conclusion","title":"Conclusion","text":"<p>DevOps culture transforms the way organizations develop, deliver, and maintain software. By fostering collaboration, leveraging automation, and integrating continuous feedback and security, DevOps enhances efficiency, quality, and customer satisfaction. Embracing DevOps principles and practices helps organizations respond to market changes more swiftly and deliver high-quality software at a faster pace.</p>"},{"location":"2024/07/22/devops-culture/#videos","title":"Videos","text":""},{"location":"2024/07/22/devops-culture/#references","title":"References","text":"<ul> <li> <p>DevOps Roadmap. https://mailchi.mp/techworld-with-nana/devops-roadmap.</p> </li> <li> <p>OpenAI. (2024). DevOps Roadmap and Concepts. </p> </li> </ul> <p>-Atlassian. DevOps Culture | Atlassian. https://www.atlassian.com/devops/what-is-devops/devops-culture.</p>"},{"location":"2024/07/22/devops-roadmap/","title":"Devops Roadmap","text":"<p>The purpose of this roadmap is to give you an idea about the landscape. The road map will guide you if you are confused about what to learn next, rather than encouraging you to pick what is hype and trendy. </p>"},{"location":"2024/07/22/devops-roadmap/#concepts-of-software-development","title":"Concepts of Software Development","text":"<p>Understanding the core principles of software development is fundamental. These concepts include:</p> <ul> <li>Software Development Life Cycle (SDLC): The process of planning, creating, testing, and deploying an information system.</li> <li>Agile Methodology: A practice that promotes continuous iteration of development and testing throughout the software development lifecycle.</li> <li>DevOps Culture: Integrates and automates the work of software development and IT operations as a means for improving and shortening the systems development life cycle.</li> </ul>"},{"location":"2024/07/22/devops-roadmap/#os-linux-basics","title":"OS &amp; Linux Basics","text":"<p>Having a strong grasp of operating systems, particularly Linux, is crucial because most DevOps tools are Linux-based. Key areas include:</p> <ul> <li>File System Navigation: Commands like <code>ls</code>, <code>cd</code>, <code>pwd</code>, <code>cp</code>, <code>mv</code>, and <code>rm</code>.</li> <li>File Permissions: Understanding and managing file permissions using <code>chmod</code>, <code>chown</code>, and <code>chgrp</code>.</li> <li>Processes: Managing processes with commands like <code>ps</code>, <code>top</code>, <code>kill</code>, and <code>htop</code>.</li> <li>Networking: Basics of network configuration, <code>ping</code>, <code>netstat</code>, and managing network interfaces.</li> </ul>"},{"location":"2024/07/22/devops-roadmap/#containerization-docker","title":"Containerization - Docker","text":"<p>Docker is the de facto standard for containerization, allowing you to package applications and their dependencies into a portable container. Key concepts include:</p> <ul> <li>Docker Images and Containers: Learn how to create, manage, and run containers.</li> <li>Dockerfile: Writing Dockerfiles to automate the creation of Docker images.</li> <li>Docker Compose: Managing multi-container Docker applications using <code>docker-compose</code>.</li> <li>Volumes and Networking: Managing data persistence and container communication.</li> </ul>"},{"location":"2024/07/22/devops-roadmap/#cicd-pipelines","title":"CI/CD Pipelines","text":"<p>Continuous Integration and Continuous Deployment (CI/CD) automate the process of integrating code changes, testing them, and deploying to production. Tools and concepts include:</p> <ul> <li>Jenkins, GitLab CI/CD, CircleCI: Popular CI/CD tools.</li> <li>Pipeline as Code: Writing CI/CD pipelines using YAML or Groovy.</li> <li>Automated Testing: Incorporating unit, integration, and functional tests in the pipeline.</li> <li>Deployment Strategies: Blue-green deployment, canary releases, and rolling updates.</li> </ul>"},{"location":"2024/07/22/devops-roadmap/#learn-one-cloud-provider","title":"Learn one Cloud Provider","text":"<p>Proficiency in at least one cloud provider is essential. The major providers are:</p> <ul> <li>Amazon Web Services (AWS): Services like EC2, S3, RDS, Lambda, VPC, and IAM.</li> <li>Microsoft Azure: Services like Azure VMs, Blob Storage, SQL Database, Functions, and Virtual Networks.</li> <li>Google Cloud Platform (GCP): Services like Compute Engine, Cloud Storage, Cloud SQL, Cloud Functions, and VPC.</li> </ul>"},{"location":"2024/07/22/devops-roadmap/#container-orchestration-kubernetes","title":"Container Orchestration - Kubernetes","text":"<p>Kubernetes automates the deployment, scaling, and management of containerized applications. Key concepts include:</p> <ul> <li>Pods: The smallest deployable units that can contain one or more containers.</li> <li>Services: Methods for exposing a set of Pods as a network service.</li> <li>Deployments: Managing the deployment of containerized applications.</li> <li>ConfigMaps and Secrets: Managing configuration and sensitive information.</li> </ul>"},{"location":"2024/07/22/devops-roadmap/#monitoring-observability","title":"Monitoring &amp; Observability","text":"<p>Monitoring and observability are crucial for maintaining the health and performance of applications. Tools and concepts include:</p> <ul> <li>Prometheus &amp; Grafana: For metrics collection, alerting, and visualization.</li> <li>ELK Stack (Elasticsearch, Logstash, Kibana): For log management and analysis.</li> <li>Tracing: Tools like Jaeger for distributed tracing to monitor and troubleshoot transactions across microservices.</li> </ul>"},{"location":"2024/07/22/devops-roadmap/#infrastructure-as-code","title":"Infrastructure as Code","text":"<p>Infrastructure as Code (IaC) involves managing and provisioning computing infrastructure using machine-readable definition files. Tools include:</p> <ul> <li>Terraform: For defining and provisioning infrastructure across various cloud providers.</li> <li>AWS CloudFormation: For creating and managing AWS resources with templates.</li> <li>Ansible: For configuration management, application deployment, and task automation.</li> </ul>"},{"location":"2024/07/22/devops-roadmap/#scripting-language","title":"Scripting Language","text":"<p>Proficiency in scripting languages is vital for automating tasks and writing custom scripts. Common languages include:</p> <ul> <li>Python: Widely used for scripting, automation, and data analysis.</li> <li>Bash: Common for Linux shell scripting and automating command-line tasks.</li> <li>PowerShell: Useful for scripting and automation in Windows environments.</li> </ul>"},{"location":"2024/07/22/devops-roadmap/#version-control-git","title":"Version Control - Git","text":"<p>Version control is essential for tracking changes in code and collaborating with others. Git is the most popular version control system:</p> <ul> <li>Git Basics: Understanding commands like <code>git init</code>, <code>clone</code>, <code>add</code>, <code>commit</code>, <code>push</code>, <code>pull</code>, and <code>merge</code>.</li> <li>Branching and Merging: Managing feature branches and merging changes.</li> <li>Collaboration: Using platforms like GitHub, GitLab, or Bitbucket for code collaboration and review.</li> </ul>"},{"location":"2024/07/22/devops-roadmap/#videos","title":"Videos","text":""},{"location":"2024/07/22/devops-roadmap/#devops-roadmap-2024","title":"DevOps Roadmap 2024","text":"<ul> <li>[x] Github milanm - DevOps Roadmap</li> </ul>"},{"location":"2024/07/22/devops-roadmap/#references","title":"References","text":"<ul> <li> <p>DevOps Roadmap. https://mailchi.mp/techworld-with-nana/devops-roadmap.</p> </li> <li> <p>OpenAI. (2024). DevOps Roadmap and Concepts. </p> </li> <li> <p>milanm/DevOps-Roadmap: DevOps Roadmap for 2024. With learning resources. </p> </li> </ul>"},{"location":"2024/07/22/devops-culture/","title":"Devops Culture","text":"<p>At its essence, a DevOps culture involves closer collaboration and a shared responsibility between development and operations for the products they create and maintain. This helps companies align their people, processes, and tools toward a more unified customer focus. </p>"},{"location":"2024/07/22/devops-culture/#videos","title":"Videos","text":""},{"location":"2024/07/22/devops-culture/#references","title":"References","text":"<ul> <li> <p>DevOps Roadmap. https://mailchi.mp/techworld-with-nana/devops-roadmap.</p> </li> <li> <p>OpenAI. (2024). DevOps Roadmap and Concepts. </p> </li> </ul> <p>-Atlassian. DevOps Culture | Atlassian. https://www.atlassian.com/devops/what-is-devops/devops-culture.</p>"},{"location":"2024/02/03/ivan-sample-pitch/","title":"Ivan Sample Pitch","text":"<p>I'm Ivan Arias; I recently graduated with a certification in Web development. I'm passionate about mastering front-end and back-end development. I have a geological background and strong interpersonal and team-building skills.</p>"},{"location":"2024/02/03/ivan-sample-pitch/#web-development","title":"Web Development","text":""},{"location":"2024/02/03/ivan-sample-pitch/#version-i","title":"Version I","text":""},{"location":"2024/02/03/ivan-sample-pitch/#transcript","title":"Transcript","text":"<p>I'm Ivan Arias; I recently graduated with a certification in Web development. I'm passionate about mastering front-end and back-end development. I have a geological background and strong interpersonal and team-building skills.</p> <p>I am a completer-finisher who can be relied upon to complete a job on time and to an excellent standard. I am reliable, flexible, adaptable, and will carry out tasks outside the job description. I have a track record of achievement. I achieved excellent grades and am often praised for my work speed and how I would get more job done than the average person.</p> <p>Also, I'm excited to apply my skills and continue learning in a professional setting.</p>"},{"location":"2024/02/03/ivan-sample-pitch/#web-development-cybersecurity","title":"Web Development + Cybersecurity","text":""},{"location":"2024/02/03/ivan-sample-pitch/#version-i_1","title":"Version I","text":""},{"location":"2024/02/03/ivan-sample-pitch/#transcript_1","title":"Transcript","text":"<p>Hello, I'm Ivan Arias. I recently graduated with certifications in Web Development and Cybersecurity.</p> <p>My passion lies in mastering both fields, and I bring a unique perspective with my background as a geological engineer.</p> <p>Known for my strong interpersonal and team-building skills, I am a completer-finisher who reliably delivers high-quality work on time. </p> <p>My flexibility and adaptability allow me to take on tasks beyond the job description, consistently achieving excellent results.</p> <p>My academic achievements reflect my dedication and efficiency, often surpassing expectations in both speed and quality of work. </p> <p>I am eager to apply my diverse skill set in a professional setting, continuing to learn and grow in the dynamic fields of web development and cybersecurity.</p>"},{"location":"2024/02/03/ivan-sample-pitch/#version-ii","title":"Version II","text":""},{"location":"2024/02/03/ivan-sample-pitch/#transcript_2","title":"Transcript","text":"<p>Hello, I\u2019m Ivan Arias. I recently graduated with certifications in Web Development and Cybersecurity.</p> <p>My passion for web development and cybersecurity is complemented by my unique background as a geoscientist.</p> <p>I am known for my strong interpersonal and team-building skills. I always finish my tasks on time and do high-quality work.</p> <p>I am flexible and can take on different tasks, consistently achieving outstanding results.</p> <p>My academic success shows my dedication and efficiency, often exceeding expectations in speed and quality.</p> <p>I am eager to apply my skills in a professional setting. I am particularly excited about the opportunities to learn and grow in web development and cybersecurity, which fills me with optimism about my potential in these fields.</p>"},{"location":"2024/02/03/ivan-sample-pitch/#web-development-cybersecurity-aws-devops","title":"Web Development + Cybersecurity + AWS + DevOps","text":""},{"location":"2024/02/03/ivan-sample-pitch/#transcript_3","title":"Transcript","text":"<p>Hello, I\u2019m Ivan Arias. I recently graduated with Web Development and Cybersecurity certifications, complemented by my geoscientist background.</p> <p>I am known for my strong interpersonal and team-building skills, consistently delivering high-quality work on time and excelling in various tasks.  My academic success demonstrates my dedication and efficiency, often exceeding expectations in both speed and quality. For instance, in my current job, I am frequently praised for my work speed and how I work more than the average person.</p> <p>I am expanding my skill set by learning AWS services and am keenly interested in pursuing a career in DevOps. I can tackle complex challenges in this field with a strong web development and cybersecurity foundation.</p> <p>I am eager to apply my skills professionally, where I can continue to grow and learn. The opportunities in web development, cybersecurity, and cloud services excite me, and I am optimistic about my potential to contribute significantly to these fields.</p>"},{"location":"2024/02/03/ivan-sample-pitch/#pitch-practice-ivans-voice","title":"Pitch Practice (Ivan's Voice)","text":""},{"location":"2024/02/03/ivan-sample-pitch/#attempt-1","title":"Attempt 1","text":"<p>  Your browser does not support the audio element.  </p>"},{"location":"2024/02/03/ivan-sample-pitch/#attempt-2","title":"Attempt 2","text":"<p>  Your browser does not support the audio element.  </p>"},{"location":"2024/02/03/ivan-sample-pitch/#attempt-3","title":"Attempt 3","text":"<p>  Your browser does not support the audio element.  </p>"},{"location":"2024/02/03/ivan-sample-pitch/#references","title":"References","text":"<ul> <li>Developing your elevator pitch. (n.d.). Center for Career Development.</li> </ul>"},{"location":"2024/07/23/software-development-life-cycle-sdlc/","title":"Software Development Life Cycle (SDLC)","text":"<p>The Software Development Life Cycle (SDLC) is a process used by software engineers and developers to design, develop, test, and deploy high-quality software. It provides a structured approach to software development and ensures the project is completed efficiently and effectively. The SDLC consists of several distinct phases, each with specific activities and deliverables. Below are the key phases typically involved in the SDLC:</p>"},{"location":"2024/07/23/software-development-life-cycle-sdlc/#1-planning","title":"1. Planning","text":"<p>In the planning phase, the project\u2019s objectives, scope, purpose, and feasibility are determined. This phase includes: - Requirement Analysis: Gathering and analyzing the needs of the stakeholders and defining the system requirements. - Feasibility Study: Assessing technical, operational, and financial feasibility. - Project Planning: Developing a project plan, including timelines, resource allocation, and budget.</p>"},{"location":"2024/07/23/software-development-life-cycle-sdlc/#2-system-design","title":"2. System Design","text":"<p>The system design phase involves creating the architecture of the system. This phase includes: - High-Level Design (HLD): Defining the overall system architecture and data flow. - Low-Level Design (LLD): Detailing the system components, modules, and interfaces.</p>"},{"location":"2024/07/23/software-development-life-cycle-sdlc/#3-implementation-or-coding","title":"3. Implementation (or Coding)","text":"<p>During the implementation phase, the actual source code is written based on the design documents. This phase includes: - Development: Writing and compiling the code. - Unit Testing: Testing individual components or modules for correctness.</p>"},{"location":"2024/07/23/software-development-life-cycle-sdlc/#4-testing","title":"4. Testing","text":"<p>The testing phase involves verifying that the software meets the requirements and identifying any defects. This phase includes: - Integration Testing: Testing the interaction between integrated modules. - System Testing: Testing the entire system as a whole. - User Acceptance Testing (UAT): Ensuring the system meets the user's needs and requirements.</p>"},{"location":"2024/07/23/software-development-life-cycle-sdlc/#5-deployment","title":"5. Deployment","text":"<p>The deployment phase involves delivering the software to the production environment where it will be used by the end-users. This phase includes: - Installation: Installing the software on user devices or servers. - Configuration: Setting up the system environment and configurations. - Training: Providing training to users and administrators.</p>"},{"location":"2024/07/23/software-development-life-cycle-sdlc/#6-maintenance","title":"6. Maintenance","text":"<p>The maintenance phase involves ongoing support and enhancements to the software after it is deployed. This phase includes: - Bug Fixing: Resolving any issues or defects discovered after deployment. - Updates: Adding new features or making improvements. - Performance Monitoring: Ensuring the system operates efficiently.</p>"},{"location":"2024/07/23/software-development-life-cycle-sdlc/#sdlc-models","title":"SDLC Models","text":"<p>Different models of the SDLC exist to suit various project needs. Some common SDLC models include:</p> <ul> <li>Waterfall Model: A linear sequential approach where each phase must be completed before the next begins.</li> <li>Agile Model: An iterative and incremental approach that promotes flexibility and customer collaboration.</li> <li>Spiral Model: Combines iterative development with systematic aspects of the waterfall model.</li> <li>V-Model: An extension of the waterfall model where testing activities are planned in parallel with corresponding development phases.</li> <li>DevOps: A culture and set of practices that bring together software development and IT operations to shorten the development life cycle.</li> </ul>"},{"location":"2024/07/23/software-development-life-cycle-sdlc/#conclusion","title":"Conclusion","text":"<p>The Software Development Life Cycle is crucial for delivering high-quality software systematically and efficiently. Understanding and following the phases of the SDLC ensures better project management, reduced risks, and successful software deployment and maintenance.</p>"},{"location":"2024/07/23/software-development-life-cycle-sdlc/#videos","title":"Videos","text":""},{"location":"archive/2024/","title":"2024","text":""},{"location":"archive/2023/","title":"2023","text":""},{"location":"category/agile/","title":"Agile","text":""},{"location":"category/web-development/","title":"Web Development","text":""},{"location":"category/devops/","title":"DevOps","text":""},{"location":"category/career-guidance/","title":"Career Guidance","text":""}]}